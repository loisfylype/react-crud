{"ast":null,"code":"var _jsxFileName = \"D:\\\\backup\\\\CursoWeb\\\\react\\\\crud\\\\crud-frontend\\\\src\\\\components\\\\user\\\\UserCrud.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Main from '../template/Main';\nimport UserTable from '../template/UserTable';\nimport UserForm from '../template/UserForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headerProps = {\n  icon: 'fa fa-users',\n  title: 'Usu치rios',\n  subtitle: 'Cadastro de usu치rios: Incluir, Listar, Alterar e Excluir!'\n};\nconst baseUrl = 'http://localhost:3001/users';\nconst initialState = {\n  user: {\n    name: '',\n    email: ''\n  },\n  list: []\n};\nexport default class UserCrud extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = { ...initialState\n    };\n  }\n\n  componentWillMount() {\n    axios(baseUrl).then(resp => {\n      this.setState({\n        list: resp.data\n      });\n    });\n  }\n\n  clear() {\n    this.setState({\n      user: initialState.user\n    });\n  }\n\n  save() {\n    const user = this.state.user;\n    const method = user.id ? 'put' : 'post';\n    const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\n    axios[method](url, user).then(resp => {\n      const list = this.getUpdatedList(resp.data);\n      this.setState({\n        user: initialState.user,\n        list\n      });\n    });\n  }\n\n  updateField(event) {\n    const user = { ...this.state.user\n    };\n    user[event.target.name] = event.target.value;\n    this.setState({\n      user\n    });\n  }\n\n  getUpdatedList(user) {\n    let add = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const list = this.state.list.filter(u => u.id !== user.id);\n    if (add) list.unshift(user);\n    return list;\n  }\n\n  load(user) {\n    this.setState({\n      user\n    });\n  }\n\n  remove(user) {\n    axios.delete(`${baseUrl}/${user.id}`).then(resp => {\n      const list = this.getUpdatedList(user, false);\n      this.setState({\n        list\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Main, { ...headerProps,\n      children: [/*#__PURE__*/_jsxDEV(UserForm, {\n        updateField: this.updateField.bind(this),\n        save: this.save.bind(this),\n        clear: this.clear.bind(this),\n        user: this.state.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n        userList: this.state.list,\n        load: this.load.bind(this),\n        remove: this.remove.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/backup/CursoWeb/react/crud/crud-frontend/src/components/user/UserCrud.jsx"],"names":["React","Component","axios","Main","UserTable","UserForm","headerProps","icon","title","subtitle","baseUrl","initialState","user","name","email","list","UserCrud","state","componentWillMount","then","resp","setState","data","clear","save","method","id","url","getUpdatedList","updateField","event","target","value","add","filter","u","unshift","load","remove","delete","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Main from '../template/Main'\r\nimport UserTable from '../template/UserTable'\r\nimport UserForm from '../template/UserForm'\r\n\r\nconst headerProps = {\r\n    icon: 'fa fa-users',\r\n    title: 'Usu치rios',\r\n    subtitle: 'Cadastro de usu치rios: Incluir, Listar, Alterar e Excluir!'\r\n}\r\n\r\nconst baseUrl = 'http://localhost:3001/users'\r\nconst initialState = {\r\n    user: { name: '', email: '' },\r\n    list: []\r\n}\r\n\r\nexport default class UserCrud extends Component {\r\n    state = { ...initialState }\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post'\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method](url, user)\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    updateField(event) {\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    getUpdatedList(user, add = true) {\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if (add) list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    load(user) {\r\n        this.setState({ user })\r\n    }\r\n\r\n    remove(user) {\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Main {...headerProps}>\r\n                <UserForm updateField={this.updateField.bind(this)} save={this.save.bind(this)} clear={this.clear.bind(this)} user={this.state.user}/>\r\n                <UserTable userList={this.state.list} load={this.load.bind(this)} remove={this.remove.bind(this)}/>\r\n            </Main>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}